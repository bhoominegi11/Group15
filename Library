#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Book {
    int id;
    char title[100];
    struct Book* prev;
    struct Book* next;
};

struct Book* head = NULL;

// Add Book
void addBook(int id, char title[]) {
    struct Book* newBook = (struct Book*)malloc(sizeof(struct Book));
    newBook->id = id;
    strcpy(newBook->title, title);
    newBook->prev = NULL;
    newBook->next = head;

    if (head != NULL)
        head->prev = newBook;

    head = newBook;

    printf("Book added successfully.\n");
}

// Display all books
void displayBooks() {
    struct Book* temp = head;
    if (temp == NULL) {
        printf("No books found.\n");
        return;
    }
    printf("Books in Library:\n");
    while (temp != NULL) {
        printf("ID: %d | Title: %s\n", temp->id, temp->title);
        temp = temp->next;
    }
}

// Delete Book by ID
void deleteBook(int id) {
    struct Book* temp = head;

    while (temp != NULL && temp->id != id) {
        temp = temp->next;
    }

    if (temp == NULL) {
        printf("Book not found!\n");
        return;
    }

    if (temp->prev != NULL)
        temp->prev->next = temp->next;
    else
        head = temp->next;

    if (temp->next != NULL)
        temp->next->prev = temp->prev;

    free(temp);
    printf("Book deleted successfully.\n");
}

// Count total books
void countBooks() {
    int count = 0;
    struct Book* temp = head;
    while (temp != NULL) {
        count++;
        temp = temp->next;
    }
    printf("Total books: %d\n", count);
}

// Search for a book by ID
void searchBook(int id) {
    struct Book* temp = head;
    while (temp != NULL) {
        if (temp->id == id) {
            printf("Book Found! ID: %d | Title: %s\n", temp->id, temp->title);
            return;
        }
        temp = temp->next;
    }
    printf("Book not found.\n");
}

// Free memory
void freeAllBooks() {
    struct Book* temp;
    while (head != NULL) {
        temp = head;
        head = head->next;
        free(temp);
    }
}

// Main menu
int main() {
    int choice, id;
    char title[100];

    while (1) {
        printf("\n--- Library Menu ---\n");
        printf("1. Add Book\n2. Display Books\n3. Delete Book\n4. Count Books\n5. Search Book\n6. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);
        getchar(); // to consume newline after number

        switch (choice) {
            case 1:
                printf("Enter book ID: ");
                scanf("%d", &id);
                getchar();
                printf("Enter book title: ");
                fgets(title, sizeof(title), stdin);
                title[strcspn(title, "\n")] = 0; // remove newline
                addBook(id, title);
                break;
            case 2:
                displayBooks();
                break;
            case 3:
                printf("Enter book ID to delete: ");
                scanf("%d", &id);
                deleteBook(id);
                break;
            case 4:
                countBooks();
                break;
            case 5:
                printf("Enter book ID to search: ");
                scanf("%d", &id);
                searchBook(id);
                break;
            case 6:
                freeAllBooks();
                printf("Exiting program.\n");
                exit(0);
            default:
                printf("Invalid choice. Try again.\n");
        }
    }
    return 0;
}
